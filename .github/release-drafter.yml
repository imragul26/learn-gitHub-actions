name-template: "v$RESOLVED_VERSION 🚀"
tag-template: "v$RESOLVED_VERSION"

# COMPLETELY disable automatic parsing
include:
  pull-requests: false
  commits: true

# MANUAL hardcoded template with emojis
template: |
  ## What's Changed 🌟
  
  ### ✨ Features
  {% for commit in commits %}
    {% if commit.message matches "/^feat:/" or commit.message matches "/^feature:/" %}
  - ✨ {{ commit.message | replace("feat:", "") | replace("feature:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 🐛 Bug Fixes
  {% for commit in commits %}
    {% if commit.message matches "/^fix:/" or commit.message matches "/^bug:/" or commit.message matches "/^fixbug:/" %}
  - 🐛 {{ commit.message | replace("fix:", "") | replace("bug:", "") | replace("fixbug:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 📚 Documentation
  {% for commit in commits %}
    {% if commit.message matches "/^docs:/" or commit.message matches "/^documentation:/" %}
  - 📚 {{ commit.message | replace("docs:", "") | replace("documentation:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 🔧 Chores & Maintenance
  {% for commit in commits %}
    {% if commit.message matches "/^chore:/" or commit.message matches "/^maintenance:/" or commit.message matches "/^build:/" or commit.message matches "/^ci:/" %}
  - 🔧 {{ commit.message | replace("chore:", "") | replace("maintenance:", "") | replace("build:", "") | replace("ci:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 📦 Dependencies
  {% for commit in commits %}
    {% if commit.message matches "/^deps:/" or commit.message matches "/^dependencies:/" or commit.message matches "/^dep:/" %}
  - 📦 {{ commit.message | replace("deps:", "") | replace("dependencies:", "") | replace("dep:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 🎨 Code Style
  {% for commit in commits %}
    {% if commit.message matches "/^style:/" or commit.message matches "/^format:/" %}
  - 🎨 {{ commit.message | replace("style:", "") | replace("format:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### ♻️ Refactoring
  {% for commit in commits %}
    {% if commit.message matches "/^refactor:/" or commit.message matches "/^refactoring:/" %}
  - ♻️ {{ commit.message | replace("refactor:", "") | replace("refactoring:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### ⚡ Performance
  {% for commit in commits %}
    {% if commit.message matches "/^perf:/" or commit.message matches "/^performance:/" %}
  - ⚡ {{ commit.message | replace("perf:", "") | replace("performance:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### ✅ Tests
  {% for commit in commits %}
    {% if commit.message matches "/^test:/" or commit.message matches "/^tests:/" %}
  - ✅ {{ commit.message | replace("test:", "") | replace("tests:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 🚨 Breaking Changes
  {% for commit in commits %}
    {% if commit.message matches "/^break:/" or commit.message matches "/^breaking:/" or commit.message matches "/!:/" %}
  - 🚨 {{ commit.message | replace("break:", "") | replace("breaking:", "") | replace("!:", "") | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

  ### 📋 Other Changes
  {% for commit in commits %}
    {% if not commit.message matches "/^feat:/" and not commit.message matches "/^feature:/" and not commit.message matches "/^fix:/" and not commit.message matches "/^bug:/" and not commit.message matches "/^docs:/" and not commit.message matches "/^chore:/" and not commit.message matches "/^deps:/" and not commit.message matches "/^style:/" and not commit.message matches "/^refactor:/" and not commit.message matches "/^perf:/" and not commit.message matches "/^test:/" and not commit.message matches "/^break:/" and not commit.message matches "/^Merge/" and not commit.message matches "/^Revert/" %}
  - 📋 {{ commit.message | trim }} by @{{ commit.author.name }}
    {% endif %}
  {% endfor %}

# Exclude merge commits and other noise
exclude:
  commits:
    - "^Merge"
    - "^Revert"
    - "^chore\(release\)"
    - "^docs\(changelog\)"

# Sort newest first
sort:
  by: "date"
  order: "desc"
