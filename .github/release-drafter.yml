name-template: "v$RESOLVED_VERSION"
tag-template: "v$RESOLVED_VERSION"

template: |
  # v$RESOLVED_VERSION ($(date +'%Y-%m-%d'))
  
  $COMMIT_MESSAGES
  
  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...$RESOLVED_VERSION

categories: []

change-template: ""

template-variables:
  COMMIT_MESSAGES: $COMMITS_TEMPLATE

replacers:
  - search: '\$COMMITS_TEMPLATE'
    replace: >-
      ${{
        const commitGroups = {
          feat: { title: "🚀 Features", items: [] },
          fix: { title: "🐛 Bug Fixes", items: [] },
          perf: { title: "⚡ Performance Improvements", items: [] },
          refactor: { title: "♻️ Refactors", items: [] },
          docs: { title: "📚 Documentation", items: [] },
          test: { title: "✅ Tests", items: [] },
          build: { title: "📦 Build System", items: [] },
          ci: { title: "👷 Continuous Integration", items: [] },
          style: { title: "💄 Styles", items: [] },
          chore: { title: "🔧 Chores", items: [] },
          revert: { title: "⏪ Reverts", items: [] },
          other: { title: "📋 Other Changes", items: [] }
        };

        commits.forEach(commit => {
          const message = commit.message.trim();
          const shaShort = commit.sha.substring(0, 7);
          const author = commit.author ? ` (${commit.author.login})` : '';
          const entry = `${message} [${shaShort}]${author}`;
          
          const typeMatch = message.match(/^(\w+)(\([^)]+\))?:/i);
          const type = typeMatch ? typeMatch[1].toLowerCase() : 'other';
          
          if (commitGroups[type]) {
            commitGroups[type].items.push(entry);
          } else {
            commitGroups.other.items.push(entry);
          }
        });

        let output = '';
        const order = ['feat', 'fix', 'perf', 'refactor', 'docs', 'test', 'build', 'ci', 'style', 'chore', 'revert', 'other'];
        
        order.forEach(type => {
          const group = commitGroups[type];
          if (group.items.length > 0) {
            output += `## ${group.title}\n\n`;
            group.items.forEach(item => {
              output += `- ${item}\n`;
            });
            output += '\n';
          }
        });

        return output.trim();
      }}

include-paths: []
exclude-labels: ["skip-changelog"]
sort-direction: ascending
sort-by: committed_date
