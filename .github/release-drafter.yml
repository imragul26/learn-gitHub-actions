name-template: "v$RESOLVED_VERSION 🚀"
tag-template: "v$RESOLVED_VERSION"

categories:
  - title: "🚨 Breaking Changes"
    labels: ["breaking-change"]
    collapse: false
    
  - title: "✨ New Features" 
    labels: ["feature"]
    collapse: false
    
  - title: "🐛 Bug Fixes"
    labels: ["bug"]
    collapse: false
    
  - title: "📚 Documentation"
    labels: ["documentation"]
    collapse: false
    
  - title: "🎨 Code Style"
    labels: ["style"]
    collapse: false
    
  - title: "♻️ Refactoring"
    labels: ["refactor"]
    collapse: false
    
  - title: "⚡ Performance"
    labels: ["performance"] 
    collapse: false
    
  - title: "✅ Tests"
    labels: ["test"]
    collapse: false
    
  - title: "📦 Dependencies"
    labels: ["dependencies"]
    collapse: false
    
  - title: "🔧 Chores"
    labels: ["chore"]
    collapse: false

template: |
  ## What's Changed

  $CHANGES

  ## Contributors

  $CONTRIBUTORS

change-template: |- 
  - $EMOJI **$TITLE**$SCOPE by @$AUTHOR in #$NUMBER

change-title-escapes: '\<*_&' # You can add other characters if needed

category-template: |
  ### $TITLE
  $COMMITS

exclude:
  labels:
    - "skip-changelog"
  commits:
    - "^Merge"
    - "^Revert"
    - "^chore\(release\):"
    - "^docs\(changelog\):"

# --- EMOJI MAPPING --- #
replacers:
  # Map commit types to emojis
  - search: '\\$EMOJI'
    replace: |
      ${{ 
        contains(github.event.commits[0].message, 'feat:') && '✨' ||
        contains(github.event.commits[0].message, 'fix:') && '🐛' ||
        contains(github.event.commits[0].message, 'docs:') && '📚' ||
        contains(github.event.commits[0].message, 'style:') && '🎨' ||
        contains(github.event.commits[0].message, 'refactor:') && '♻️' ||
        contains(github.event.commits[0].message, 'perf:') && '⚡' ||
        contains(github.event.commits[0].message, 'test:') && '✅' ||
        contains(github.event.commits[0].message, 'chore:') && '🔧' ||
        contains(github.event.commits[0].message, 'build:') && '📦' ||
        contains(github.event.commits[0].message, 'ci:') && '🌐' ||
        '📋' 
      }}

  # Add scope if present
  - search: '\\$SCOPE'
    replace: |
      ${{ 
        github.event.commits[0].message.match(/\(([^)]+)\):/) ? ` **(${github.event.commits[0].message.match(/\(([^)]+)\):/)[1]})**` : '' 
      }}

# --- COMMIT PARSING --- #
commit-parser:
  pattern: "^(?<type>\\w+)(?:\\((?<scope>[\\w\\-\.]+)\\))?!?:\\s?(?<description>.+)$"
  map:
    feat: "✨ New Features"
    fix: "🐛 Bug Fixes"
    docs: "📚 Documentation" 
    style: "🎨 Code Style"
    refactor: "♻️ Refactoring"
    perf: "⚡ Performance"
    test: "✅ Tests"
    chore: "🔧 Chores"
    build: "📦 Dependencies"
    ci: "🌐 CI/CD"
    break: "🚨 Breaking Changes"
    breaking: "🚨 Breaking Changes"

# --- SORTING --- #
sort:
  by: "date"
  order: "desc"

# --- INCLUDED DATA --- #
include:
  commit-hash: false
  commit-author: true
  commit-date: false
  pull-request-number: true
  pull-request-title: false
