name: Generate Release Notes from Commits

on:
  push:
    tags:
      - 'v*'

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit messages
        id: get_commits
        run: |
          # Get all commits in this tag
          git log --oneline --format="%s|||%an" > commits.txt
          echo "commits=$(cat commits.txt | base64 -w 0)" >> $GITHUB_OUTPUT
          cat commits.txt

      - name: Generate categorized release notes
        run: |
          # Decode commits
          echo "${{ steps.get_commits.outputs.commits }}" | base64 -d > commits.txt
          
          # Create release notes file
          echo "# 🚀 Release Notes" > release_notes.md
          echo "" >> release_notes.md
          
          # Features
          echo "## ✨ Features" >> release_notes.md
          grep -i "feat:" commits.txt | while read -r line; do
            message=$(echo "$line" | cut -d'|||' -f1 | sed 's/feat: //i' | sed 's/feature: //i')
            author=$(echo "$line" | cut -d'|||' -f2)
            echo "- ✨ $message by @$author" >> release_notes.md
          done
          echo "" >> release_notes.md
          
          # Bug Fixes
          echo "## 🐛 Bug Fixes" >> release_notes.md
          grep -i "fix:" commits.txt | while read -r line; do
            message=$(echo "$line" | cut -d'|||' -f1 | sed 's/fix: //i' | sed 's/bug: //i')
            author=$(echo "$line" | cut -d'|||' -f2)
            echo "- 🐛 $message by @$author" >> release_notes.md
          done
          echo "" >> release_notes.md
          
          # Documentation
          echo "## 📚 Documentation" >> release_notes.md
          grep -i "docs:" commits.txt | while read -r line; do
            message=$(echo "$line" | cut -d'|||' -f1 | sed 's/docs: //i')
            author=$(echo "$line" | cut -d'|||' -f2)
            echo "- 📚 $message by @$author" >> release_notes.md
          done
          echo "" >> release_notes.md
          
          # Chores
          echo "## 🔧 Chores" >> release_notes.md
          grep -i "chore:" commits.txt | while read -r line; do
            message=$(echo "$line" | cut -d'|||' -f1 | sed 's/chore: //i')
            author=$(echo "$line" | cut -d'|||' -f2)
            echo "- 🔧 $message by @$author" >> release_notes.md
          done
          echo "" >> release_notes.md
          
          # Other changes (exclude merge and common patterns)
          echo "## 📋 Other Changes" >> release_notes.md
          grep -v -i "feat:" commits.txt | grep -v -i "fix:" | grep -v -i "docs:" | grep -v -i "chore:" | grep -v "Merge" | grep -v "Revert" | while read -r line; do
            message=$(echo "$line" | cut -d'|||' -f1)
            author=$(echo "$line" | cut -d'|||' -f2)
            echo "- 📋 $message by @$author" >> release_notes.md
          done
          
          # Show generated notes
          echo "=== GENERATED RELEASE NOTES ==="
          cat release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: release_notes.md
